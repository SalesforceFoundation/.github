name: SFDO Codeowners Review Workflows
on:
  pull_request:
    types:
      - labeled
      - review_requested

env:
  CODEOWNERS_TEAM: 'salesforce-org-release-engineering'
  READY_FOR_REVIEW_COMMENT: |
    has labeled as ready for Release Engineering review.

  CODEOWNERS_COMMENT: |
    We ask that teams use the following process for routine reviews:

    1. After creating a non-draft pull request that includes automation updates,
       a release engineer will be auto-assigned to the PR.
    2. When dev review is complete and the PR is ready for the release engineer
       to review, add a "ready for RE review" label to the PR to let us know when
       the PR is ready for us to review.
    3. If you've added the "ready for RE review" label but haven't received a
       review within a 36 hours, @-mention the assigned RE in a comment on the PR.
    4. If you don't receive a response from the assigned RE by the end of the
       next business day (or your request is urgent), post a message to
       #sfdo-releng-support that includes a link to this PR and one of us will
       review as soon as we're able.

jobs:
  workflow_codeowners_comment:
    runs-on: ubuntu-latest
    if: github.event.action == 'review_requested'
    steps:
      - name: Add comment
        id: codeowners-comment
        if: github.event.requested_team.slug == 'salesforce-org-release-engineering'
        uses: SalesforceFoundation/github-script@v4
        with:
          script: |
            const comment_body = process.env.CODEOWNERS_COMMENT

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ‘‹ @${context.payload.pull_request.user.login} ${comment_body}`
            })
  workflow_ready_comment:
    runs-on: ubuntu-latest
    if: github.event.action == 'labeled' && contains(github.event.pull_request.labels.*.name, 'ready for RE review')
    steps:
      - name: Add comment
        id: codeowners-comment
        uses: SalesforceFoundation/github-script@v4
        with:
          script: |
            const comment_body = process.env.READY_FOR_REVIEW_COMMENT:
            const review_team = process.env.CODEOWNERS_TEAM;

            let team = github.teams
              .listMembersInOrg({
                org: context.repo.owner,
                team_slug: review_team,
                role: "all",
              })
              .map((_) => _.login);

            let team_reviewers = github.pulls
              .listRequestedReviewers({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.payload.pull_request.number,
              })
              .map((_) => _.login)
              .filter((login) => team.includes(login));

            let mention_text = '';
            if (team_reviewers.length >= 1) {
              let reviewer_mentions = team_reviewers
                .map((login, idx) => `${idx}. @${login}`)
                .join(', ');

                mention_text = `Reviews have been requested from: @${reviewer_mentions}.`
            }

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ‘‹ @${context.payload.sender.login} ${comment_body} ${mention_text}`,
            });
